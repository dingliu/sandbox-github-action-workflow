name: Parse YAML

on:
  # Allows the workflow can be triggered by
  # an upstream workflow.
  workflow_call:
    inputs:
      service_tier:
        type: string
        required: true
  # Allows the workflow to be triggered manually.
  workflow_dispatch:
    inputs:
      service_tier:
        description: 'Service tier'
        required: true
        type: choice
        options:
          - 'engineering'
          - 'nonproduction'
          - 'production'
        default: 'engineering'

permissions:
  contents: write

env:
  service_tier: ${{ github.event.inputs.service_tier || inputs.service_tier }}

jobs:
  parse_yaml:
    runs-on: ubuntu-latest
    outputs:
      parsed_json: ${{ (steps.parse-yaml.outputs.parsed_json) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Parse YAML
        # Convert the YAML file to minified JSON.
        id: parse-yaml
        shell: bash
        run: |
          parsed_json="$(yq -I0 -o=json eval '.config' './config/${{ env.service_tier }}.yaml')"
          echo "### Hello world! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "This is the lead in sentence for the list" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "- Lets add a bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- Lets add a second bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- How about a third one?" >> $GITHUB_STEP_SUMMARY
          echo "parsed_json=${parsed_json}" >> "$GITHUB_OUTPUT"

  consume_outputs:
    runs-on: ubuntu-latest
    needs: parse_yaml
    steps:
      - name: Print outputs
        id: print-outputs
        env:
          DATABASE_HOST: ${{ fromJson(needs.parse_yaml.outputs.parsed_json).database.host }}
        run: |
          echo "Database host: ${DATABASE_HOST}"
